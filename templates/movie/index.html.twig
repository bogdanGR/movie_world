{% extends 'base.html.twig' %}

{% block title %}Hello MovieController!{% endblock %}

{% block body %}

    <header>
        <div class="row align-items-center">
           <div class="col-6">
               <h1>Movie World</h1>
           </div>

            <div class="col-6">
                {% if app.user %}
                    <div class="mb-3">
                        Welcome Back <span class="text-info"> {{ app.user.name }}</span> |  <a href="{{ path('app_logout') }}">Logout</a>
                    </div>

                {% else %}
                    <p>
                        <a href="{{  path('app_login') }}">Log in</a> or
                        <a class="btn btn-primary" href="{{  path('app_register') }}">Sign Up</a>

                    </p>
                {% endif %}
            </div>
        </div>
    </header>

    <main class="container my-4">
        <div class="row">
            <div class="col-8">
                {% for movie in movies %}
                    <div class="col-12 mb-3">
                        <div class="card h-100 shadow-sm">
                            <div class="card-body d-flex flex-column">
                                <div class="row card-header">
                                    <h4 class="card-title col-8">
                                        <a href="{{ path('movie_show', {'id': movie.id}) }}" class="text-dark text-decoration-none">
                                            {{ movie.title }}
                                        </a>
                                    </h4>
                                    <span class="col-4 text-end">Posted on  {{ movie.createdAt ? movie.createdAt|date('d/m/Y') : 'N/A' }}</span>
                                </div>
                                <div class="pb-3 pt-3 text-end">
                                    <a href="{{ path('movie_show', {'id': movie.id}) }}" class="btn btn-sm btn-outline-primary">View</a>

                                    {% if app.user and app.user.id == movie.user.id %}
                                        <a href="{{ path('movie_edit', {'id': movie.id}) }}" class="btn btn-sm btn-outline-secondary">Edit</a>
                                        <form method="post" action="{{ path('movie_delete', {'id': movie.id}) }}"
                                              class="d-inline" onsubmit="return confirm('Are you sure?');">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ movie.id) }}">
                                            <button class="btn btn-sm btn-outline-danger">Delete</button>
                                        </form>
                                    {% endif %}
                                </div>
                                <p class="card-text text-muted">{{ movie.description[:250] ~ '...' }}</p>

                                <div class="row card-footer align-items-center">
                                    <div class="col-6">
                                        <p class="align-item-center mb-0">

                                            {% set vote = app.user ? app.user.getUserVoteByMovieId(movie.id) : null %}

                                            {% if app.user and app.user.id != movie.user.id %}
                                                <a href="#" class="vote-link {{ vote and vote.type == constant('App\\Entity\\Vote::TYPE_LIKE') ? 'text-success fw-bold' : '' }}"data-movie="{{ movie.id }}" data-type="like">
                                                    {{ movie.getVotesByType(constant('App\\Entity\\Vote::TYPE_LIKE')) }} likes
                                                </a> |
                                                <a href="#" class="vote-link {{ vote and vote.type == constant('App\\Entity\\Vote::TYPE_HATE') ? 'text-danger fw-bold' : '' }}" data-movie="{{ movie.id }}" data-type="hate">
                                                    {{ movie.getVotesByType(constant('App\\Entity\\Vote::TYPE_HATE')) }} hates
                                                </a>
                                            {% else %}
                                                <p>  {{ movie.getVotesByType(constant('App\\Entity\\Vote::TYPE_LIKE')) }} likes
                                            |       {{ movie.getVotesByType(constant('App\\Entity\\Vote::TYPE_HATE')) }} hates
                                                </p>
                                            {% endif %}
                                        </p>
                                    </div>
                                    <div class="col-6">
                                        <p class="text-end">
                                            Posted by
                                            {% if app.user and app.user.id == movie.user.id %}
                                                You
                                            {% else %}
                                                {{ movie.user.name }}
                                            {% endif %}
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                {% else %}
                    <div class="col-12">
                        <div class="alert alert-info">No movies found.</div>
                    </div>
                {% endfor %}
            </div>
            <div class="col-4">
                {% if app.user %}
                    <a class="btn btn-outline-primary" href="{{ path('movie_new') }}">Create new Movie</a>
                {% endif %}
            </div>
        </div>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.vote-link').forEach(link => {
                link.addEventListener('click', async (e) => {
                    e.preventDefault();

                    const movieId = e.target.dataset.movie;
                    const type = e.target.dataset.type;

                    const response = await fetch(`/vote/${movieId}/${type}`, {
                        method: 'POST',
                    });

                    const data = await response.json();

                    if (response.ok) {
                        // Update vote counts
                        e.target.closest('p').innerHTML = `
                            <a href="#" class="vote-link" data-movie="${movieId}" data-type="like">${data.likes} likes</a> |
                            <a href="#" class="vote-link" data-movie="${movieId}" data-type="hate">${data.hates} hates</a>
                        `;
                        // Re-bind click events
                        document.dispatchEvent(new Event('DOMContentLoaded'));
                    } else {
                        alert(data.error || 'Error while voting');
                    }
                });
            });
        });
    </script>

{% endblock %}
